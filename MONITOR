class monitor extends uvm_monitor;
`uvm_component_utils(monitor)
seq_item trans_collected;
virtual intf vif;

uvm_analysis_port #(seq_item) item_collected_port;

function new(string name="monitor", uvm_component parent);
super.new(name, parent);
trans_collected = new();
item_collected_port = new("item_collected_port", this);
endfunction

virtual function void build_phase(uvm_phase phase);
super.build_phase(phase);
if (!uvm_config_db#(virtual intf)::get(this, "", "vif", vif)) 
begin

`uvm_fatal("NO_VIF", {"Virtual interface must be set for: ", get_full_name(), ".vif"})

end
    
endfunction

virtual task run_phase(uvm_phase phase);

forever begin
 @(vif.mon_cb);

trans_collected.read = vif.mon_cb.read;
trans_collected.write = vif.mon_cb.write;
trans_collected.rd_address = vif.mon_cb.rd_address;
trans_collected.wr_address = vif.mon_cb.wr_address;
trans_collected.data_in = vif.mon_cb.data_in;
trans_collected.data_out = vif.mon_cb.data_out;

item_collected_port.write(trans_collected);

`uvm_info("MONITOR", $sformatf("time=%0d read=%0d write=%0d wr_address=%0d rd_address=%0d data_in=%0d data_out=%0d", $time, trans_collected.read ,trans_collected.write, trans_collected.wr_address , trans_collected.rd_address ,trans_collected.data_in ,trans_collected.data_out), UVM_MEDIUM)
end
endtask

endclass
 
